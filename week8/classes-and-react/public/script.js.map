{"version":3,"sources":["../client/js/script.js"],"names":["Person","console","log","bob","firstName","lastName","sayName","mary"],"mappings":";;;;;;AAAC,aAAW;AACV;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAXY,MAaNA,MAbM;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAeV;AAfU,gCAgBD;AACPC,gBAAQC,GAAR,CAAY,yBAAZ,EAAuC,IAAvC;AACA;AAED;AApBS;;AAAA;AAAA;;AAuBV,MAAIC,MAAM,IAAIH,MAAJ,EAAV;;AAEAG,MAAIC,SAAJ,GAAgB,KAAhB;AACAD,MAAIE,QAAJ,GAAe,OAAf;AACAJ,UAAQC,GAAR,CAAY,KAAZ,EAAmBC,GAAnB;;AAEAA,MAAIG,OAAJ;;AAEA,MAAIC,OAAO,IAAIP,MAAJ,EAAX;;AAEAO,OAAKH,SAAL,GAAiB,MAAjB;AACAG,OAAKF,QAAL,GAAgB,SAAhB;AACAJ,UAAQC,GAAR,CAAY,MAAZ,EAAoBK,IAApB;;AAEAA,OAAKD,OAAL;AAED,CAvCA,GAAD","file":"script.js","sourcesContent":["(function() {\n  'use strict';\n\n//when things are named use a capital\n//class is a blueprint\n//classes have data, properties, and functions (ie:array is a class)\n//define Person and anytime a person is created they will have a sayName function\n//built in functions (push, pop, length, slice) all happen on classes\n//class - collective (2003 toyota camry) the thing\n//instance - individual item (vin number of each camry) the instance of the thing\n//this - a keyword- the current item (the vin number for the camry you're looking at) the current instance\n//new - a keyword to create another instance\n\nclass Person {\n\n  //function attached to the person can't access outside of the Person class\n  sayName(){\n    console.log('this is referring to...', this);\n    //this\n\n  }\n}\n\n  var bob = new Person();\n\n  bob.firstName = 'Bob';\n  bob.lastName = 'Jones';\n  console.log('bob', bob);\n\n  bob.sayName();\n\n  var mary = new Person();\n\n  mary.firstName = 'Mary';\n  mary.lastName = 'Poppins';\n  console.log('mary', mary);\n\n  mary.sayName()\n\n}());\n"]}
{"version":3,"sources":["planet-list-component.js"],"names":["window","SW","PlanetListComponent","$","ajax","url","done","data","console","log","setState","apiResult","theList","state","results","map","planet","index","name","theData","React","Component"],"mappings":";;;;;;;;;;AAAAA,OAAOC,EAAP,GAAYD,OAAOC,EAAP,IAAa,EAAzB,C,CAA6B;;AAE5B,aAAW;AACV;;AAEF;AACA;;AAJY,MAMJC,mBANI;AAAA;;AAOR,mCAAa;AAAA;;AAAA;AAET;AACA;AACA;AACA;AACA;AACD;;AAdK;AAAA;AAAA,gCAgBG;AAAA;;AACPC,UAAEC,IAAF,CAAO;AACLC,eAAI;AADC,SAAP,EAGCC,IAHD,CAGM,UAACC,IAAD,EAAU;AACdC,kBAAQC,GAAR,CAAY,UAAZ,EAAwBF,IAAxB;AACA,iBAAKG,QAAL,CAAc;AACZC,uBAAUJ;AADE,WAAd;AAGD,SARD;AASD;AA1BK;AAAA;AAAA,+BA2BA;AAAA;;AAEN,YAAIK,OAAJ,CAFM,CAEO;;AAEb,YAAI,KAAKC,KAAL,KAAe,IAAnB,EAAyB;AACvBD,oBAAW;AAAA;AAAA;AACN,iBAAKC,KAAL,CAAWF,SAAX,CAAqBG,OAArB,CAA6BC,GAA7B,CAAiC,UAACC,MAAD,EAASC,KAAT,EAAkB;AAAC,qBAAM;AAAA;AAAA,kBAAI,KAAKA,KAAT;AAAiBD,uBAAOE;AAAxB,eAAN;AAAyC,aAA7F;AADM,WAAX;AAGD;;AAED,eAAO;AAAA;AAAA,YAAK,WAAW,aAAhB;AACL;AAAA;AAAA;AAAA;AAAA,WADK;AAEL;AAAA;AAAA,cAAQ,SAAS;AAAA,uBAAK,OAAKC,OAAL,EAAL;AAAA,eAAjB;AAAA;AAAA,WAFK;AAIJP;AAJI,SAAP;AAQD;AA7CO;;AAAA;AAAA,IAMwBQ,MAAMC,SAN9B;;AAgDVpB,KAAGC,mBAAH,GAAyBA,mBAAzB,CAhDU,CAgDoC;AAC9C;;AAWD,CA5DA,GAAD","file":"planet-list-component.js","sourcesContent":["window.SW = window.SW || {}; //on the window.name = on the window.name or blank object window.sw will be coerced into false because it is undefined.\n\n(function() {\n  'use strict';\n\n//Everytime you add a new file must manually restart gulp\n//outside the iife means the PlanetListComponent is in the global scope inside the iife it is not. Must create namespace.\n\n  class PlanetListComponent extends React.Component{\n    constructor(){\n      super();\n        // this.state={\n        //   apiResult:{\n        //     results:[]\n        //   }\n        // };\n      }\n\n      theData(){\n        $.ajax({\n          url:'http://swapi.co/api/planets/'\n        })\n        .done((data) => {\n          console.log('the data', data);\n          this.setState({\n            apiResult:data\n          });\n        });\n      }\n    render(){\n\n      var theList; //set a variable then call the variable conditional to the if statement\n\n      if (this.state !== null) {\n        theList =  <ul>\n            {this.state.apiResult.results.map((planet, index)=> {return<li key={index}>{planet.name}</li>})}\n          </ul>\n      }\n\n      return(<div className =\"planet-list\">\n        <h1>Planet List</h1>\n        <button onClick={()=> this.theData()}> Load it!</button>\n\n        {theList}\n\n      </div>\n      )\n    }\n  }\n\n  SW.PlanetListComponent = PlanetListComponent; //Keep these the same the property will make more sense.\n  //type SW in console in browswer to see the object with the PlanetListComponent init. \n\n\n\n\n\n\n\n\n\n\n}());\n"]}
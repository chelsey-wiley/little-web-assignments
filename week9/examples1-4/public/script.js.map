{"version":3,"sources":["script.js"],"names":["mountNode","document","querySelector","ListComponent","props","name","type","favs","map","console","log","React","Component","GitHubThingy","state","apiResult","results","$","ajax","url","done","data","setState","clicky","peeps","AppComponent","id","itemInData","ReactDOM","render"],"mappings":";;;;;;;;;;AAAA,IAAIA,YAAYC,SAASC,aAAT,CAAuB,aAAvB,CAAhB;;IAEMC,a;;;;;;;;;;;6BAEI;AACN,aAAO;AAAA;AAAA;AAAA;AAAM,aAAKC,KAAL,CAAWC,IAAjB;AAAA;AAA0B,aAAKD,KAAL,CAAWE,IAArC;AAEL;AAAA;AAAA;AACG,eAAKF,KAAL,CAAWG,IAAX,CAAgBC,GAAhB,CAAoB,UAACD,IAAD,EAAU;AAAE,mBAAO;AAAA;AAAA,gBAAI,KAAKA,IAAT;AAAgBA;AAAhB,aAAP;AAAoC,WAApE;AADH;AAFK,OAAP;AAOAE,cAAQC,GAAR,CAAY,QAAZ,EAAsB,KAAKN,KAA3B;AACD;;;;EAXyBO,MAAMC,S;;AAe9B,CAAC,wDAAyD;;IACxDC,Y;;;AAEJ,0BAAc;AAAA;;AAAA;;AAEZ,KAAC,4EAA6E;AAC9E,WAAKC,KAAL,GAAa;AACXC,iBAAW;AACTC,iBAAS;AADA;AADA,KAAb;AAKAP,YAAQC,GAAR,CAAY,iBAAZ;AARY;AASb;;;;6BAGO;AAAA;;AACNO,QAAEC,IAAF,CAAO;AACLC,aAAI;AADC,OAAP,EAGCC,IAHD,CAGM,UAACC,IAAD,EAAS;AACbZ,gBAAQC,GAAR,CAAY,SAAZ,EAAuBW,IAAvB;;AAEA,eAAKC,QAAL,CAAc;AACZP,qBAAUM;AADE,SAAd;AAGD,OATD;AAWD;;;6BAEQ;AAAA;;AACPZ,cAAQC,GAAR,CAAY,0BAAZ;AACA,aAAO;AAAA;AAAA,UAAK,WAAU,eAAf;AACH;AAAA;AAAA;AAAA;AAAA,SADG;AAEL;AAAA;AAAA,YAAQ,SAAS;AAAA,qBAAK,OAAKa,MAAL,EAAL;AAAA,aAAjB;AAAA;AAAA,SAFK;AAGL;AAAA;AAAA;AACG,eAAKT,KAAL,CAAWC,SAAX,CAAqBC,OAArB,CAA6BR,GAA7B,CAAiC,UAACgB,KAAD,EAAW;AAAC,mBAAO;AAAA;AAAA,gBAAI,KAAKA,MAAML,GAAf;AAAqBK,oBAAMnB;AAA3B,aAAP;AAA+C,WAA5F;AADH;AAHK,OAAP;AASD;;;;EAvCwBM,MAAMC,S;;IA4C3Ba,Y;;;;;;;;;;;6BAEK;;AAEP,UAAIJ,OAAO,CAAC;AACRhB,cAAK,MADG;AAERC,cAAM,OAFE;AAGRC,cAAM,CAAC,MAAD,EAAS,SAAT,EAAoB,WAApB,CAHE;AAIRmB,YAAI;AAJI,OAAD,EAMT;AACErB,cAAM,kBADR;AAEEC,cAAM,SAFR;AAGEC,cAAK,CAAC,WAAD,EAAc,aAAd,CAHP;AAIEmB,YAAI;AAJN,OANS,EAYT;AACErB,cAAM,oBADR;AAEEC,cAAM,MAFR;AAGEC,cAAM,CAAC,QAAD,EAAW,QAAX,CAHR;AAIEmB,YAAI;AAJN,OAZS,CAAX;;AAoBA,aAAO;AAAA;AAAA,UAAK,WAAU,MAAf;AACL;AAAA;AAAA;AAEGL,eAAKb,GAAL,CAAS,UAACmB,UAAD,EAAgB;AAAC,mBAAO,oBAAC,aAAD,IAAe,KAAKA,WAAWD,EAA/B,EAAmC,MAAMC,WAAWtB,IAApD,EAA0D,MAAMsB,WAAWrB,IAA3E,EAAiF,MAAMqB,WAAWpB,IAAlG,GAAP;AAAoH,WAA9I;AAFH,SADK;AAML,4BAAC,YAAD;AANK,OAAP;AASD;;;;EAjCwBI,MAAMC,S;;AAkChC;;AAEDgB,SAASC,MAAT,CAAgB,oBAAC,YAAD,OAAhB,EAAkC7B,SAAlC","file":"script.js","sourcesContent":["var mountNode = document.querySelector('#react-root');\n\nclass ListComponent extends React.Component{\n\n  render(){\n    return <li> {this.props.name} - {this.props.type}\n    {/*{this.props.place.name} {this.props.place.location}*/}\n      <ol>\n        {this.props.favs.map((favs) => { return <li key={favs}>{favs}</li>; })}\n        {/*{this is a comment}*/}\n      </ol>\n      </li>\n    console.log('props?', this.props);\n  }\n}\n\n\n    {/*use CDN from google for jquery attach script to HTML*/}\nclass GitHubThingy extends React.Component {\n\n  constructor() {\n    super();\n    {/*in constructor don't set state apiResult blank obj to be filled in later*/}\n    this.state = {\n      apiResult: {\n        results: []\n      }\n    }\n    console.log('firing Starwars');\n  }\n\n\n  clicky(){\n    $.ajax({\n      url:'http://swapi.co/api/people'\n    })\n    .done((data) =>{\n      console.log('got it!', data);\n\n      this.setState({\n        apiResult:data\n      });\n    });\n\n  }\n\n  render (){\n    console.log('star wars stuff rendered');\n    return <div className=\"Github-thingy\">\n        <h2>GitHub Here</h2>\n      <button onClick={()=> this.clicky()}>Load Data</button>\n      <ul>\n        {this.state.apiResult.results.map((peeps) => {return <li key={peeps.url}>{peeps.name}</li>; })}\n      </ul>\n\n\n    </div>\n  }\n}\n\n\n\nclass AppComponent extends React.Component {\n\n  render() {\n\n    var data = [{\n        name:'Moes',\n        type: 'tacos',\n        favs: ['taco', 'burrito', 'rice-bowl'],\n        id: 1,\n      },\n      {\n        name: 'ChopHouse Burger',\n        type: 'burgers',\n        favs:['americana', 'goat-cheese'],\n        id: 2\n      },\n      {\n        name: 'Metropolitian Cafe',\n        type: 'cafe',\n        favs: ['soup, ', 'salad '],\n        id: 3\n      },\n    ];\n\n    return <div className=\"list\">\n      <ul>\n          {/*data.map((place) => {return <ListComponent key={itemInData.id} place={place}/>; })}*/}\n        {data.map((itemInData) => {return <ListComponent key={itemInData.id} name={itemInData.name} type={itemInData.type} favs={itemInData.favs} />; })}\n      </ul>\n\n      <GitHubThingy/>\n\n    </div>;\n  }\n};\n\nReactDOM.render(<AppComponent />, mountNode);\n"]}